# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  desc "build app and upload to testflight"
  lane :beta do
    get_certificates
    get_provisioning_profile
    increment_build_number(
        build_number: latest_testflight_build_number + 1
    )
    build_app(
      configuration: "Debug"
    )
    upload_to_testflight
    slack(
      message: "Test-flight 배포 성공",
      slack_url: ENV['SLACK_URL']
    )
  end

  desc "build app and release to App Store."
  lane :release do |options|
    if options[:v]
      get_certificates
      get_provisioning_profile
      increment_build_number(
        build_number: latest_testflight_build_number + 1
      )
      build_app(
        configuration: "Release"
      )
      upload_to_app_store(
        app_version: options[:v],
        submit_for_review: false,
        force: true,
        automatic_release: true,
        skip_screenshots: true,
        skip_metadata: false,
	submission_information: { add_id_info_uses_idfa: false }
      )
      slack(
        message: "AppStore 배포에 성공했습니다!",
        slack_url: ENV['SLACK_URL']
      )
    end
  end

  lane :tests do
run_tests(scheme: "Haram",
          slack_url: ENV['SLACK_URL'],
          slack_channel: "#fastlane-build")
  end

  desc "Runs `pod install`"    
  puts "Runs `pod install`"   
  lane :pod_install do   
    cocoapods(use_bundle_exec: false)
    slack(
      message: "Cocoapods 설치 성공",
      slack_url: ENV['SLACK_URL']
    )
  end

  error do |lane, exception, options|
    slack(
      message: "에러 발생 : #{exception}",
      success: false,
      slack_url: ENV['SLACK_URL'],
    )
  end
end

